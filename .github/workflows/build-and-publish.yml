name: Build and Publish NuGet packages

on:
  push:
#     branches:
#       - master
    tags:
      - '*'
    paths-ignore:
      - README.md
      - LICENSE
      - RELEASENOTES.md
      - CHANGELOG.md
      - docs/**/*
  pull_request:
    branches:
      - master
    paths-ignore:
      - README.md
      - LICENSE
      - RELEASENOTES.md
      - CHANGELOG.md
      - docs/**/*

jobs:
  Build:
    runs-on: ubuntu-latest
    env:
      buildConfiguration: 'Release'
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Required for GitVersion

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'

    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.x

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: >
        dotnet build **/*.csproj **/*[Tt]ests*.csproj
        --configuration $buildConfiguration
        --no-restore

    - name: Test
      run: >
        dotnet test
        --configuration $buildConfiguration
        --no-restore
        --verbosity normal
        --collect "Code coverage"

    - name: Pack
      run: >
        dotnet pack
        --no-build
        --verbosity Detailed
        --output $GITHUB_WORKSPACE/drop
        -p:PackageVersion=$GITVERSION_NUGETVERSION

    - name: Publish Artifact
      uses: actions/upload-artifact@v2
      with:
        path: ${GITHUB_WORKSPACE}/drop
        name: drop

    - name: Publish to GitHub Packages
      run: >
        dotnet nuget push "$GITHUB_WORKSPACE/drop/**/*.nupkg"
        -k ${{ secrets.GITHUB_TOKEN }}

  Release:
    runs-on: ubuntu-latest
    needs: [ Build ]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v1
      with:
        name: drop

    - name: Publish to NuGet.org
      run: >
        dotnet nuget push "$GITHUB_WORKSPACE/drop/**/*.nupkg"
        -k ${{ secrets.NUGET_API_KEY }}
